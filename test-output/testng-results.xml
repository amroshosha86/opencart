<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-12-11T11:37:08 EET" name="Default suite" finished-at="2021-12-11T11:37:46 EET" duration-ms="38082">
    <groups>
    </groups>
    <test started-at="2021-12-11T11:37:08 EET" name="Default test" finished-at="2021-12-11T11:37:46 EET" duration-ms="38082">
      <class name="tests.AddShippingAddressTest">
        <test-method is-config="true" signature="startDriver()[pri:0, instance:tests.AddShippingAddressTest@3b235623]" started-at="2021-12-11T11:37:04 EET" name="startDriver" finished-at="2021-12-11T11:37:08 EET" duration-ms="4083" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startDriver -->
        <test-method signature="UserCanReg()[pri:0, instance:tests.AddShippingAddressTest@3b235623]" started-at="2021-12-11T11:37:08 EET" name="UserCanReg" finished-at="2021-12-11T11:37:11 EET" duration-ms="2888" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanReg -->
        <test-method is-config="true" signature="takescreenshot(org.testng.ITestResult)[pri:0, instance:tests.AddShippingAddressTest@3b235623]" started-at="2021-12-11T11:37:11 EET" name="takescreenshot" finished-at="2021-12-11T11:37:11 EET" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserCanReg status=SUCCESS method=AddShippingAddressTest.UserCanReg()[pri:0, instance:tests.AddShippingAddressTest@3b235623] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takescreenshot -->
        <test-method signature="UserCanAddAddress()[pri:1, instance:tests.AddShippingAddressTest@3b235623]" started-at="2021-12-11T11:37:11 EET" name="UserCanAddAddress" finished-at="2021-12-11T11:37:45 EET" duration-ms="34572" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"*[name='postcode0']"}
  (Session info: chrome=96.0.4664.93)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.0.0-rc-2', revision: '8d1e4aa5ae'
System info: host: 'DESKTOP-IOIIPVP', ip: '192.168.1.23', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ed603256cfdfda8409e4dd829845cfcd, findElement {using=name, value=postcode0}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 95.0.4638.54 (d31a821ec901f..., userDataDir: C:\Users\AMROMO~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:58032}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:58032/devtoo..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: ed603256cfdfda8409e4dd829845cfcd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"*[name='postcode0']"}
  (Session info: chrome=96.0.4664.93)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.0.0-rc-2', revision: '8d1e4aa5ae'
System info: host: 'DESKTOP-IOIIPVP', ip: '192.168.1.23', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ed603256cfdfda8409e4dd829845cfcd, findElement {using=name, value=postcode0}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 95.0.4638.54 (d31a821ec901f..., userDataDir: C:\Users\AMROMO~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:58032}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:58032/devtoo..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: ed603256cfdfda8409e4dd829845cfcd
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:164)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:139)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:383)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:375)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy17.sendKeys(Unknown Source)
at pages.PageBase.settext(PageBase.java:44)
at pages.AddressPage.filladdressform(AddressPage.java:74)
at tests.AddShippingAddressTest.UserCanAddAddress(AddShippingAddressTest.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanAddAddress -->
        <test-method is-config="true" signature="takescreenshot(org.testng.ITestResult)[pri:0, instance:tests.AddShippingAddressTest@3b235623]" started-at="2021-12-11T11:37:45 EET" name="takescreenshot" finished-at="2021-12-11T11:37:46 EET" duration-ms="578" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserCanAddAddress status=FAILURE method=AddShippingAddressTest.UserCanAddAddress()[pri:1, instance:tests.AddShippingAddressTest@3b235623] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takescreenshot -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:tests.AddShippingAddressTest@3b235623]" started-at="2021-12-11T11:37:46 EET" name="quitBrowser" finished-at="2021-12-11T11:37:46 EET" duration-ms="337" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
      </class> <!-- tests.AddShippingAddressTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
